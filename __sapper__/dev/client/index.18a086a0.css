.pro.svelte-okjivu{background-color:rgb(255, 255, 119)}.res.svelte-okjivu{background-color:rgb(119, 183, 255)}.trd.svelte-okjivu{background-color:rgb(255, 169, 241)}.pol.svelte-okjivu{background-color:rgb(209, 186, 143)}.sur.svelte-okjivu{background-color:rgb(143, 255, 143)}.war.svelte-okjivu{background-color:rgb(255, 98, 98)}.col.svelte-okjivu{background-color:rgb(255, 184, 102)}.fer.svelte-okjivu{background-color:rgb(148, 197, 152)}.adv.svelte-okjivu{background-color:rgb(231, 184, 215)}.met.svelte-okjivu{background-color:rgb(187, 55, 55)}.fud.svelte-okjivu{background-color:rgb(255, 215, 142)}.ore.svelte-okjivu{background-color:rgb(212, 139, 56)}.wtr.svelte-okjivu{background-color:rgb(115, 141, 253)}.sil.svelte-okjivu{background-color:rgb(161, 45, 255)}.ico-sm.svelte-okjivu{padding:.2em;height:.8em;width:.8em}.ico-cont-lg.svelte-okjivu,.ico-cont-sm.svelte-okjivu{display:inline-block;overflow:hidden;position:relative;border-radius:50%}.ico-cont-sm.svelte-okjivu{height:1.2em;width:1.2em}.ico-lg.svelte-okjivu{height:2em;width:2em}.ico-cont-lg.svelte-okjivu{height:2em;width:2em}.inf.svelte-okjivu{display:block;margin-left:auto;margin-right:auto;width:100%;background:grey}.num.svelte-okjivu{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);font-size:.5vh}
.iconbar.svelte-bfkj6e{display:flex;flex-direction:column;justify-content:flex-start}
@import url(https://unpkg.com/@smui/card@latest/bare.css);.mdc-card.svelte-4d9gi8.svelte-4d9gi8{overflow:hidden;padding:1vh;min-height:30vh;min-width:19vh;max-height:30vh;max-width:19vh;margin-left:1vh;margin-right:1vh}.mdc-card.mini.svelte-4d9gi8.svelte-4d9gi8{min-height:16vh;max-height:16vh}.title.svelte-4d9gi8.svelte-4d9gi8{display:flex;flex-direction:row;max-height:3vh;min-height:3vh;font:2vh bold}.title.svelte-4d9gi8 p.svelte-4d9gi8{margin-top:auto;margin-bottom:auto;margin-left:1vh}.logo.svelte-4d9gi8.svelte-4d9gi8{height:12vh;width:12vh;margin-left:3vh;border-radius:10vh 0vh 10vh 0vh;border:.25vh solid black;transform:rotate(45deg)}.logo.svelte-4d9gi8 img.svelte-4d9gi8{margin-left:2.25vh;margin-top:2vh;height:7.5vh;width:7.5vh;transform:rotate(-45deg);overflow:hidden}.desc.svelte-4d9gi8.svelte-4d9gi8{position:relative;font:1vh bold;line-height:1.2}.action.svelte-4d9gi8.svelte-4d9gi8{position:relative;border:0.05vh solid black;padding:0.5vh}.action.svelte-4d9gi8.svelte-4d9gi8:after{position:absolute;background:rgb(80,80,80);height:1vh;left:.5vh;top:-.5vh}.action.svelte-4d9gi8.svelte-4d9gi8:after{content:'Action'}
@import url(https://unpkg.com/@smui/card@latest/bare.css);.mdc-card.svelte-1ax9ajq.svelte-1ax9ajq{overflow:hidden;padding:1vh;min-height:30vh;min-width:19vh;max-height:30vh;max-width:19vh;margin-left:1vh;margin-right:1vh;position:relative}.mdc-card.mini.svelte-1ax9ajq.svelte-1ax9ajq{min-height:16vh;max-height:16vh}.title.svelte-1ax9ajq.svelte-1ax9ajq{display:flex;flex-direction:row;max-height:3vh;min-height:3vh;font:1.5vh bold;text-align:end}.logo.svelte-1ax9ajq.svelte-1ax9ajq{height:12vh;width:12vh;margin-left:3vh;border-radius:10vh 0vh 10vh 0vh;transform:rotate(45deg)}.logo.svelte-1ax9ajq img.svelte-1ax9ajq{margin-left:2.25vh;margin-top:2vh;height:7.5vh;width:7.5vh;transform:rotate(-45deg);overflow:hidden}.name.svelte-1ax9ajq.svelte-1ax9ajq{position:absolute;top:20%;left:2%;transform:rotate(90deg);transform-origin:bottom left;font-size:1.6vh;border-radius:5px;background:rgb(100,100,100);padding-left:1em;padding-right:1em}
@import url(https://unpkg.com/@smui/card@latest/bare.css);:root{--pro-color:rgb(255, 255, 119);--col-color:rgb(255, 184, 102);--trd-color:rgb(255, 169, 241);--pol-color:rgb(209, 186, 143);--res-color:rgb(119, 183, 255);--war-color:rgb(255, 98, 98);--sur-color:rgb(143, 255, 143);--pro-trd-clr:linear-gradient(to right, var(--pro-color), var(--pro-color) 50%, var(--trd-color) 50%, var(--trd-color) 100%)}.selectable.svelte-12t5202.svelte-12t5202{border:solid rgb(114, 210, 223);border-width:1px}.selected.svelte-12t5202.svelte-12t5202{border:solid rgb(50, 190, 132);border-width:1px}.mdc-card.svelte-12t5202.svelte-12t5202{position:relative;overflow:hidden;padding:1vh;height:30vh;width:19vh;margin-left:1vh;margin-right:1vh}.mdc-card.svelte-12t5202.svelte-12t5202:hover{transform:scale(1.2);z-index:3}.mdc-card.mini.svelte-12t5202.svelte-12t5202{min-height:16vh;max-height:16vh}.logo.svelte-12t5202 div.svelte-12t5202{transform:rotate(-45deg) scale(1.7);margin-top:2.9vh;margin-left:2.8vh}.title.svelte-12t5202.svelte-12t5202{display:flex;flex-direction:row;max-height:3vh;min-height:3vh;overflow:hidden;font:2vh bold}.title.svelte-12t5202 p.svelte-12t5202{margin-top:auto;margin-bottom:auto;margin-left:1vh}.logo.svelte-12t5202.svelte-12t5202{min-height:12vh;min-width:12vh;max-height:12vh;max-width:12vh;margin-left:3vh;border-radius:10vh 0vh 10vh 0vh;border:.25vh solid black;transform:rotate(45deg)}.logo.svelte-12t5202 img.svelte-12t5202{margin-left:2.25vh;margin-top:2vh;height:7.5vh;width:7.5vh;transform:rotate(-45deg);overflow:hidden}.desc.svelte-12t5202.svelte-12t5202{position:relative;font:1vh bold;line-height:1.2}.role.svelte-12t5202.svelte-12t5202,.action.svelte-12t5202.svelte-12t5202{position:relative;border:0.05vh solid black;padding:0.5vh}.role.svelte-12t5202.svelte-12t5202:after,.action.svelte-12t5202.svelte-12t5202:after{position:absolute;background:rgb(80,80,80);height:1vh;left:.5vh;top:-.5vh}.role.svelte-12t5202.svelte-12t5202:after{content:'Role'}.action.svelte-12t5202.svelte-12t5202:after{content:'Action'}.pilecount.svelte-12t5202.svelte-12t5202{position:absolute;left:5%;bottom:3%}
.show.svelte-6s0ykr.svelte-6s0ykr{border-radius:0% 50% 50% 0%}.show.svelte-6s0ykr.svelte-6s0ykr,.research.svelte-6s0ykr.svelte-6s0ykr{position:absolute;top:20vh;height:25vh;width:25vh;background:rgb(80,80,80);display:flex;align-items:center;justify-content:center;border:0.5px solid rgb(49, 158, 177);z-index:2}.research.svelte-6s0ykr.svelte-6s0ykr{border-radius:50% 0% 0% 50%;right:0%}.player.svelte-6s0ykr.svelte-6s0ykr{border-radius:5vh;background:rgb(80,80,80);display:flex;align-items:center}.stars.svelte-6s0ykr.svelte-6s0ykr{position:absolute;top:50%;left:50%;width:2px;height:2px;box-shadow:686px 466px #d4d4d4, 630px 365px whitesmoke, 1140px 224px #ededed, 1048px 344px white, 857px 70px #e3e3e3, 651px 400px #dbdbdb, 431px -107px #d1d1d1, -144px 151px #d4d4d4, 139px 402px #f7f7f7, 1090px -160px #c9c9c9, 1489px 75px #d6d6d6, -404px -113px #e0e0e0, -94px -358px #fafafa, 692px -211px #fcfcfc, 1414px 403px #e3e3e3, 445px -469px whitesmoke, 437px -173px #cfcfcf, -1474px 79px #e8e8e8, 286px -370px #e3e3e3, -389px -74px #f2f2f2, -386px 230px #cccccc, 1289px -415px #f0f0f0, 566px 6px #d1d1d1, 645px 53px #f7f7f7, 90px -232px #d4d4d4, 868px 214px #dedede, 633px -126px #c4c4c4, -1432px -324px #c4c4c4, 486px -11px #f0f0f0, 1484px 338px #f2f2f2, 1496px -127px #e8e8e8, 587px -446px #f0f0f0, 695px -142px #e6e6e6, 1145px 14px #f0f0f0, 339px -36px #d4d4d4, 193px -337px #ebebeb, -1364px -453px #ebebeb, 287px -252px whitesmoke, 888px 94px #fafafa, 485px 148px #c4c4c4, -619px -26px #d6d6d6, -1016px -251px #c9c9c9, -369px -387px #e3e3e3, -87px -433px #f2f2f2, -128px 162px #ededed, 285px 468px #cfcfcf, -715px -447px #cfcfcf, 1124px -404px #d9d9d9, 1209px 248px #e6e6e6, 831px -459px #f7f7f7, -1320px 390px #fafafa, -416px 189px #ebebeb, -1445px -2px #d6d6d6, -765px -181px #e3e3e3, -217px -471px #ededed, 1283px 76px #e6e6e6, -718px -474px #e0e0e0, 198px -71px #dbdbdb, 1009px -200px #f2f2f2, -1418px 200px #d4d4d4, 1354px -349px #dedede, -934px 243px #cfcfcf, -116px 465px #e8e8e8, -314px 446px #c9c9c9, -338px -311px #dbdbdb, 307px 92px #fcfcfc, -1414px 412px #c4c4c4, -1296px 472px #fcfcfc, -787px -76px #e0e0e0, -398px 466px #dbdbdb, -532px 144px #d6d6d6, -1449px -143px #c7c7c7, 755px -101px #d9d9d9, 222px 355px #dbdbdb, -1145px -318px #d4d4d4, 355px -463px whitesmoke, -807px -336px white, -398px -471px #c4c4c4, -935px 152px #d4d4d4, 1082px 166px #d1d1d1, 456px -159px #dedede, -818px 270px #dbdbdb, 63px 270px white, 60px 3px #c9c9c9, 560px 173px whitesmoke, 1217px -292px #ebebeb, -913px -419px #c2c2c2, -790px -386px #e6e6e6, 988px -472px #cfcfcf, -318px -476px #f2f2f2, -179px -282px #f7f7f7, 1079px -27px #fafafa, -1179px -466px #cccccc, 322px -193px #c7c7c7, -545px -269px #cccccc, -1188px 318px #e0e0e0, 19px 227px #d9d9d9, -1141px -437px #d9d9d9, 475px 86px #cfcfcf, 93px 208px #fcfcfc, -734px -222px #fcfcfc, -487px 61px #ebebeb, 1136px 107px #d6d6d6, 211px -291px #ebebeb, -1003px 91px #c2c2c2, 1379px 462px #e8e8e8, -85px -412px #e8e8e8, 549px -129px #cfcfcf, -269px -428px #c4c4c4, -442px 281px #c2c2c2, -116px -186px #c2c2c2, -1092px 252px #e8e8e8, 598px -47px #c4c4c4, 599px 430px #e0e0e0, 946px 225px #e3e3e3, 994px -441px #c9c9c9, -265px 4px #d4d4d4, 1376px -454px #d9d9d9, -963px -224px white, -202px -223px #cfcfcf, 1005px -201px #e3e3e3, -659px -302px #f2f2f2, -325px 397px #c2c2c2, -44px -391px #c2c2c2, 228px -223px #dedede, -603px 221px #dedede, -147px -397px #c9c9c9, 75px -394px #d9d9d9, -308px 239px #f0f0f0, -807px -74px #dbdbdb, -857px -235px #f0f0f0, 1055px 465px #d9d9d9, 307px 252px #cccccc, -1249px 25px #d1d1d1, 669px 304px #dbdbdb, -738px -341px #f0f0f0, -1063px -20px #ebebeb, -1476px -271px #e8e8e8, -20px -415px #cccccc, -1010px 338px #d4d4d4, -166px -3px #cfcfcf, 129px 7px #e0e0e0, 618px 10px #ededed, -1481px -273px #f2f2f2, -965px -193px #c4c4c4, 1271px 431px #f2f2f2, 991px -315px #c4c4c4, -918px 270px #d1d1d1, -1172px -216px #ebebeb, 1483px 449px #dedede, 728px 104px #e6e6e6, 144px -366px white, -656px 42px #f2f2f2, -527px -371px #f7f7f7, 76px 231px #d1d1d1, 1073px -183px #ededed, 520px 120px #e3e3e3, -163px 16px #cccccc, -1367px 82px #d6d6d6, -484px -131px whitesmoke, 279px -435px #e8e8e8, 446px -149px #e0e0e0, -735px 379px #ededed, -794px -442px #f2f2f2, 1314px 452px #c2c2c2, -1146px -65px #d6d6d6, -6px -390px #fafafa, 524px -183px #cccccc, 641px -148px #e3e3e3, 827px -341px #dedede, 150px 150px #d4d4d4, -1206px 417px #cccccc, -86px -451px #d1d1d1, 1144px -22px #e0e0e0, -336px -144px #c2c2c2, 436px 173px #c2c2c2, 506px -318px #fafafa, 167px 90px #cccccc, 128px 220px #ebebeb, -344px 424px #c2c2c2, 609px 393px #fcfcfc, 298px 211px #c2c2c2, -595px -339px #cccccc, 1184px -338px #c7c7c7, -1149px 118px #dbdbdb, -891px 14px #ebebeb, 107px -419px #d9d9d9, -233px -330px #f0f0f0, -1457px 443px #dedede, -217px 86px #d4d4d4, 1142px 83px #c4c4c4, 623px 309px #f7f7f7, 503px -216px #e8e8e8, -989px -176px #ebebeb, -269px 291px #e3e3e3, 483px 22px #fcfcfc, 1290px 302px #cccccc, -1016px -273px #c7c7c7, -1426px -65px #e3e3e3, 162px -341px #c7c7c7, -103px 335px #dbdbdb, 944px -441px #e3e3e3, 1151px 163px #e8e8e8, -1110px -42px #cfcfcf, -901px 15px #c4c4c4, 179px 60px #dbdbdb, 695px -320px #e3e3e3, -923px -348px white, 1102px 373px #e0e0e0, -823px 154px whitesmoke, -695px 424px #f2f2f2, 1421px -336px #d9d9d9, -947px -471px #fcfcfc, 1267px -410px #fafafa, 140px -470px #d1d1d1, -931px -476px #d4d4d4, 650px -354px #c7c7c7, -838px -426px #dedede, 810px 339px #d1d1d1, -1405px 343px #d9d9d9, 183px -17px #e3e3e3, -1275px -237px #f2f2f2, -666px -74px white, -1155px 61px #e6e6e6, -1478px 48px #ebebeb, -146px 288px #f0f0f0, 936px -277px #e3e3e3, 770px 409px #d6d6d6, 935px 443px #c4c4c4, -616px -408px #f0f0f0, -97px -268px #c9c9c9, -6px -292px white, 10px 262px #ebebeb, 791px 438px #f2f2f2, 470px -34px #d6d6d6, 679px -298px #d6d6d6, 1271px -303px whitesmoke, 480px 166px #e0e0e0, -502px -241px #d9d9d9, 599px -435px #d1d1d1, 1317px 176px #c2c2c2, 1124px -126px #d6d6d6, 17px -358px #c2c2c2, 1364px 232px #cccccc, -1176px -248px #c2c2c2, 1178px -175px white, 84px -98px #c9c9c9, -494px 305px #cccccc, -464px 476px whitesmoke, 269px -250px #e3e3e3, -381px 59px #e3e3e3, 805px -247px #e8e8e8, 103px -60px #d6d6d6, -1368px -210px #f0f0f0, 304px 39px whitesmoke, 1189px 457px #d9d9d9, -1171px 447px #ebebeb, -1447px -25px #f2f2f2, -507px -347px #f7f7f7, 835px -473px #cfcfcf, 544px 133px #cccccc, -254px 36px #c9c9c9, -134px 4px #d9d9d9, -727px -88px #ededed, 200px 92px #f7f7f7, -1372px -93px #e6e6e6, -16px -17px #d1d1d1, 707px -152px #cfcfcf, -442px 311px #c4c4c4, -77px 112px #ebebeb, -1488px 226px #c2c2c2, -1151px 431px white, 1180px -95px #d6d6d6, -836px -263px #f2f2f2, -35px 327px #fafafa, 1242px -238px #e8e8e8, -679px -273px #c4c4c4, 296px 401px #cfcfcf, -724px 70px #f0f0f0, -1350px -171px #f0f0f0, 53px 113px whitesmoke, 1112px -207px #fafafa, 276px -437px #d9d9d9, 513px 429px whitesmoke, 30px 343px #cccccc, 60px 86px #dbdbdb, 654px -157px #f2f2f2, 970px 299px #cfcfcf, -1247px -264px #ebebeb, -697px 301px #c7c7c7, -205px 50px #ebebeb, -332px 192px #fcfcfc, 1077px -374px #c9c9c9, -856px -449px #e6e6e6, 313px 389px #fcfcfc, 262px -378px #c7c7c7, -801px -206px #c7c7c7, -330px -8px #f7f7f7, 284px 3px #cccccc, -1264px 478px #cccccc, 1458px -160px whitesmoke, -906px -225px #dedede, 503px -98px #c7c7c7, 93px -84px #dedede, 1201px -347px #f7f7f7, 580px 265px #e0e0e0, 1495px -157px whitesmoke, -100px -255px #e8e8e8, 214px 462px #ebebeb, 20px -185px #ededed, 1134px -381px #ededed, -1263px 281px #ebebeb, -748px 113px #ebebeb, -1371px -137px whitesmoke, 13px -13px #cfcfcf, 1116px 101px #e6e6e6, -139px -410px #c7c7c7, 258px -83px #c9c9c9, -1336px 351px #e6e6e6, 502px 1px #e0e0e0, 268px -269px #c2c2c2, -549px 50px #c9c9c9, 1191px -363px #c7c7c7, -117px -271px #f2f2f2, 287px 288px #dbdbdb, -78px -95px #fafafa, -567px 228px #cfcfcf, -911px -285px #c2c2c2, 1242px -257px #fafafa, 1304px 336px #ededed, -66px -117px #c4c4c4, -560px 198px #c9c9c9, -1229px -245px whitesmoke, -980px 144px #d1d1d1, -982px -453px #ebebeb, -1056px 272px #d4d4d4, -30px -247px #e8e8e8, -741px 456px #d6d6d6, -1467px 397px #f2f2f2, -1341px 134px #dbdbdb, 1226px -408px #cfcfcf, 995px 345px #c7c7c7, 564px 167px #e6e6e6, -333px 33px #f7f7f7, -1198px 433px #ebebeb, 1308px 356px #e3e3e3, 997px 286px #d1d1d1, 734px 213px #ebebeb, -1256px -173px whitesmoke, 847px -200px #cfcfcf, -751px 429px #dedede;animation:svelte-6s0ykr-fly 3s linear infinite;transform-style:preserve-3d}.stars.svelte-6s0ykr.svelte-6s0ykr:before,.stars.svelte-6s0ykr.svelte-6s0ykr:after{content:"";position:absolute;width:inherit;height:inherit;box-shadow:inherit}.stars.svelte-6s0ykr.svelte-6s0ykr:before{transform:translateZ(-300px);animation:svelte-6s0ykr-fade1 3s linear infinite}.stars.svelte-6s0ykr.svelte-6s0ykr:after{transform:translateZ(-600px);animation:svelte-6s0ykr-fade2 3s linear infinite}@keyframes svelte-6s0ykr-fly{from{transform:translateZ(0px)}to{transform:translateZ(300px)}}@keyframes svelte-6s0ykr-fade1{from{opacity:.5}to{opacity:1}}@keyframes svelte-6s0ykr-fade2{from{opacity:0}to{opacity:.5}}.pass.svelte-6s0ykr.svelte-6s0ykr{border-radius:1vh;height:50px;min-width:200px;background:rgb(80,80,80);justify-content:center;align-items:center;display:flex}.messagetoplayer.svelte-6s0ykr.svelte-6s0ykr{text-align:center;background:rgb(80,80,80);border-radius:5vh;width:60%;margin-left:20%;position:absolute;top:75%}.selectable.svelte-6s0ykr.svelte-6s0ykr{border:solid rgb(114, 210, 223);border-width:1px}.selected.svelte-6s0ykr.svelte-6s0ykr{border:solid rgb(50, 190, 132);border-width:1px}.flex.svelte-6s0ykr.svelte-6s0ykr{display:flex;flex-direction:row;justify-content:center}.playerinfo.svelte-6s0ykr.svelte-6s0ykr{display:flex;flex-direction:row;justify-content:flex-start;width:100%;height:10%}.playingfield.svelte-6s0ykr.svelte-6s0ykr{overflow:hidden;min-height:100vh;min-width:100vw;min-height:100vh;min-width:100vw;background:radial-gradient(rgb(82,48,103), rgb(10,10,10));background-repeat:no-repeat;background-size:cover}.options.svelte-6s0ykr.svelte-6s0ykr,.talloptions.svelte-6s0ykr.svelte-6s0ykr{background-image:url("/images/embackground.png");background-repeat:no-repeat;display:flex;flex-direction:row;justify-content:space-around;position:absolute;right:10%;top:50%;height:15%;width:80%;font-size:150%}.talloptions.svelte-6s0ykr.svelte-6s0ykr{height:30%}.ownedcards.svelte-6s0ykr.svelte-6s0ykr{display:flex;flex-direction:row;height:20%;position:absolute;top:80%}.hand.svelte-6s0ykr.svelte-6s0ykr{margin:auto;display:flex;flex-direction:row;max-width:90%;max-height:100%;overflow-x:scroll;overflow-y:hidden}.deck.svelte-6s0ykr.svelte-6s0ykr,.discard.svelte-6s0ykr.svelte-6s0ykr{border-radius:3vh;min-width:19vh;max-width:19vh;background-repeat:no-repeat;text-align:center;justify-content:center;align-items:center;display:flex;font-size:6vh}.deck.svelte-6s0ykr.svelte-6s0ykr{margin-right:auto;background-image:url('../images/card-draw.svg')}.discard.svelte-6s0ykr.svelte-6s0ykr{margin-left:auto;background-image:url('../images/card-burn.svg')}.zone.svelte-6s0ykr.svelte-6s0ykr{width:100%;overflow-x:scroll;overflow-y:hidden;display:flex;flex-direction:row}.centerrow.svelte-6s0ykr.svelte-6s0ykr{height:40%;position:absolute;top:15%}.researchrow.svelte-6s0ykr.svelte-6s0ykr{height:40%;align-items:center;padding-left:30vh;width:70vw}.researchrow>div.svelte-6s0ykr.svelte-6s0ykr{height:95%}.playedcards.svelte-6s0ykr.svelte-6s0ykr{height:20%;overflow-x:scroll;position:absolute;top:55%;justify-content:flex-start}.bordered.svelte-6s0ykr.svelte-6s0ykr{border:solid #000;border-width:1px}.svelte-6s0ykr.svelte-6s0ykr::-webkit-scrollbar{display:none}.playercountselector.svelte-6s0ykr>p.svelte-6s0ykr{height:33%;text-align:center;font-size:300%;background-color:rgb(34, 26, 59);border:solid #000;border-width:1px}.playercountselector.svelte-6s0ykr>input.svelte-6s0ykr{height:33%;text-align:center;width:100%;font-size:300%;background-color:rgb(34, 26, 59);border:solid #000;border-width:1px;color:rgb(49, 158, 177);padding:0px;margin:0px}.passtoplayer.svelte-6s0ykr.svelte-6s0ykr{height:80%;width:100%;top:10%;border:solid #000;border-width:1px;text-align:center;font-size:300%;color:white;background-color:rgb(34, 26, 59)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */