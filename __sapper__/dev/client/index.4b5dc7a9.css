@import url(https://unpkg.com/@smui/card@latest/bare.css);.mdc-card.svelte-4d9gi8.svelte-4d9gi8{overflow:hidden;padding:1vh;min-height:30vh;min-width:19vh;max-height:30vh;max-width:19vh;margin-left:1vh;margin-right:1vh}.mdc-card.mini.svelte-4d9gi8.svelte-4d9gi8{min-height:16vh;max-height:16vh}.title.svelte-4d9gi8.svelte-4d9gi8{display:flex;flex-direction:row;max-height:3vh;min-height:3vh;font:2vh bold}.title.svelte-4d9gi8 p.svelte-4d9gi8{margin-top:auto;margin-bottom:auto;margin-left:1vh}.logo.svelte-4d9gi8.svelte-4d9gi8{height:12vh;width:12vh;margin-left:3vh;border-radius:10vh 0vh 10vh 0vh;border:.25vh solid black;transform:rotate(45deg)}.logo.svelte-4d9gi8 img.svelte-4d9gi8{margin-left:2.25vh;margin-top:2vh;height:7.5vh;width:7.5vh;transform:rotate(-45deg);overflow:hidden}.desc.svelte-4d9gi8.svelte-4d9gi8{position:relative;font:1vh bold;line-height:1.2}.action.svelte-4d9gi8.svelte-4d9gi8{position:relative;border:0.05vh solid black;padding:0.5vh}.action.svelte-4d9gi8.svelte-4d9gi8:after{position:absolute;background:rgb(80,80,80);height:1vh;left:.5vh;top:-.5vh}.action.svelte-4d9gi8.svelte-4d9gi8:after{content:'Action'}
@import url(https://unpkg.com/@smui/card@latest/bare.css);:root{--pro-color:rgb(255, 255, 119);--col-color:rgb(255, 184, 102);--trd-color:rgb(255, 169, 241);--pol-color:rgb(209, 186, 143);--res-color:rgb(119, 183, 255);--war-color:rgb(255, 98, 98);--sur-color:rgb(143, 255, 143);--pro-trd-clr:linear-gradient(to right, var(--pro-color), var(--pro-color) 50%, var(--trd-color) 50%, var(--trd-color) 100%)}.mdc-card.svelte-cyquv5.svelte-cyquv5{position:relative;overflow:hidden;padding:1vh;height:30vh;width:21vh;margin-left:1vh;margin-right:1vh}.mdc-card.mini.svelte-cyquv5.svelte-cyquv5{min-height:16vh;max-height:16vh}.logo.svelte-cyquv5 div.svelte-cyquv5{transform:rotate(-45deg) scale(1.7);margin-top:2.9vh;margin-left:2.8vh}.title.svelte-cyquv5.svelte-cyquv5{display:flex;flex-direction:row;max-height:3vh;min-height:3vh;overflow:hidden;font:2vh bold}.title.svelte-cyquv5 p.svelte-cyquv5{margin-top:auto;margin-bottom:auto;margin-left:1vh}.logo.svelte-cyquv5.svelte-cyquv5{height:12vh;width:12vh;margin-left:3vh;border-radius:10vh 0vh 10vh 0vh;border:.25vh solid black;transform:rotate(45deg)}.logo.svelte-cyquv5 img.svelte-cyquv5{margin-left:2.25vh;margin-top:2vh;height:7.5vh;width:7.5vh;transform:rotate(-45deg);overflow:hidden}.desc.svelte-cyquv5.svelte-cyquv5{position:relative;font:1vh bold;line-height:1.2}.role.svelte-cyquv5.svelte-cyquv5,.action.svelte-cyquv5.svelte-cyquv5{position:relative;border:0.05vh solid black;padding:0.5vh}.role.svelte-cyquv5.svelte-cyquv5:after,.action.svelte-cyquv5.svelte-cyquv5:after{position:absolute;background:rgb(80,80,80);height:1vh;left:.5vh;top:-.5vh}.role.svelte-cyquv5.svelte-cyquv5:after{content:'Role'}.action.svelte-cyquv5.svelte-cyquv5:after{content:'Action'}.pilecount.svelte-cyquv5.svelte-cyquv5{position:absolute;left:5%;bottom:3%}
.pass.svelte-i8baa2.svelte-i8baa2{background-repeat:no-repeat;height:50px;min-width:200px;background-image:url("/images/EMbutton200.png");align-self:center;text-align:center}.messagetoplayer.svelte-i8baa2.svelte-i8baa2{text-align:center;width:100%;position:absolute;top:75%}.selectable.svelte-i8baa2.svelte-i8baa2{border:solid rgb(114, 210, 223);border-width:4px;border-left-width:2px;border-right-width:2px}.selected.svelte-i8baa2.svelte-i8baa2{border:solid rgb(50, 190, 132);border-width:4px;border-left-width:2px;border-right-width:2px}.flex.svelte-i8baa2.svelte-i8baa2{display:flex;flex-direction:row;justify-content:center}.playerinfo.svelte-i8baa2.svelte-i8baa2{display:flex;flex-direction:row;justify-content:flex-start;width:100%;height:10%}.playingfield.svelte-i8baa2.svelte-i8baa2{overflow:hidden;min-height:100vh;min-width:100vw;min-height:100vh;min-width:100vw;background:radial-gradient(rgb(82,48,103), rgb(10,10,10));background-repeat:no-repeat;background-size:cover}.options.svelte-i8baa2.svelte-i8baa2,.talloptions.svelte-i8baa2.svelte-i8baa2{background-image:url("/images/embackground.png");background-repeat:no-repeat;display:flex;flex-direction:row;justify-content:space-around;position:absolute;right:10%;top:50%;height:15%;width:80%;font-size:150%}.talloptions.svelte-i8baa2.svelte-i8baa2{height:30%}.ownedcards.svelte-i8baa2.svelte-i8baa2{display:flex;flex-direction:row;height:20%;position:absolute;top:80%}.hand.svelte-i8baa2.svelte-i8baa2{margin:auto;display:flex;flex-direction:row;max-width:90%;max-height:100%;overflow-x:scroll;overflow-y:hidden}.deck.svelte-i8baa2.svelte-i8baa2{max-width:5%;margin-right:auto}.discard.svelte-i8baa2.svelte-i8baa2{max-width:5%;margin-left:auto}.zone.svelte-i8baa2.svelte-i8baa2{width:100%;overflow-x:scroll;overflow-y:hidden;display:flex;flex-direction:row}.centerrow.svelte-i8baa2.svelte-i8baa2{height:40%;position:absolute;top:15%}.researchrow.svelte-i8baa2.svelte-i8baa2{height:40%}.researchrow>div.svelte-i8baa2.svelte-i8baa2{height:95%}.playedcards.svelte-i8baa2.svelte-i8baa2{height:20%;overflow-x:scroll;position:absolute;top:55%;justify-content:flex-start}.bordered.svelte-i8baa2.svelte-i8baa2{border:solid #000;border-width:1px}.svelte-i8baa2.svelte-i8baa2::-webkit-scrollbar{display:none}.playercountselector.svelte-i8baa2>p.svelte-i8baa2{height:33%;text-align:center;font-size:300%;background-color:rgb(34, 26, 59);border:solid #000;border-width:1px}.playercountselector.svelte-i8baa2>input.svelte-i8baa2{height:33%;text-align:center;width:100%;font-size:300%;background-color:rgb(34, 26, 59);border:solid #000;border-width:1px;color:rgb(49, 158, 177);padding:0px;margin:0px}.passtoplayer.svelte-i8baa2.svelte-i8baa2{height:80%;width:100%;top:10%;border:solid #000;border-width:1px;text-align:center;font-size:300%;color:white;background-color:rgb(34, 26, 59)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */